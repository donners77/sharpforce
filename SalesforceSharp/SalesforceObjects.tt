<#@ template debug="true" hostSpecific="true" #>
<#@ output extension=".cs" #>
<#@ Assembly Name="System.Core.dll" #>
<#@ Assembly Name="System.Xml.dll" #>
<#@ Assembly Name="System.Xml.Linq.dll" #>
<#@ Assembly Name="System.Windows.Forms.dll" #>
<#@ import namespace="System" #>
<#@ import namespace="System.IO" #>
<#@ import namespace="System.Diagnostics" #>
<#@ import namespace="System.Linq" #>
<#@ import namespace="System.Xml.Linq" #>
<#@ import namespace="System.Collections" #>
<#@ import namespace="System.Collections.Generic" #>
using System.ComponentModel.DataAnnotations;
using System.Diagnostics;
//using Newtonsoft.Json;

// ReSharper disable PartialTypeWithSinglePart
// ReSharper disable UnusedMember.Local

namespace SalesforceSharp 
{
<#
	var path = Path.Combine(Path.GetDirectoryName(Host.TemplateFile), @"Schema\SObjects.xml");
	System.Xml.Linq.XDocument xdoc = System.Xml.Linq.XDocument.Load(path);
	var entities = from c in xdoc.Descendants("sobjects") 
				   select new { 
						Name = c.Element("name").Value,
						SObject = c.Element("urls").Element("sobject").Value,
						Describe = c.Element("urls").Element("describe").Value,
						RowTemplate = c.Element("urls").Element("rowTemplate").Value,
				   };

    foreach (var entity in entities) 
	{
#>
    /// <summary>
    /// POCO for <#= entity.Name #>
    /// </summary>
    [DebuggerDisplay("Id={Id}")]
    public partial class <#= entity.Name #>
    {
        public const string Describe = "<#= entity.Describe #>";
        public const string SObject = "<#= entity.SObject #>";
        public const string RowTemplate = "<#= entity.RowTemplate #>";

        /// <summary>
        /// <#= entity.Name #> Id
        /// </summary>
        [StringLength(18)]
        public string Id { get; set; }
    }

<#
    }
#>
}

// ReSharper restore PartialTypeWithSinglePart
// ReSharper restore UnusedMember.Local
 
<#+
  // Insert any template procedures here
#>